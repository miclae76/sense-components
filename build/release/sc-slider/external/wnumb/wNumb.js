!function(factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?module.exports=factory():window.wNumb=factory()}(function(){"use strict";function strReverse(a){return a.split("").reverse().join("")}function strStartsWith(input,match){return input.substring(0,match.length)===match}function strEndsWith(input,match){return input.slice(-1*match.length)===match}function throwEqualError(F,a,b){if((F[a]||F[b])&&F[a]===F[b])throw new Error(a)}function isValidNumber(input){return"number"==typeof input&&isFinite(input)}function toFixed(value,decimals){var scale=Math.pow(10,decimals);return(Math.round(value*scale)/scale).toFixed(decimals)}function formatTo(decimals,thousand,mark,prefix,postfix,encoder,decoder,negativeBefore,negative,edit,undo,input){var inputIsNegative,inputPieces,inputBase,originalInput=input,inputDecimals="",output="";return encoder&&(input=encoder(input)),!!isValidNumber(input)&&(decimals!==!1&&0===parseFloat(input.toFixed(decimals))&&(input=0),input<0&&(inputIsNegative=!0,input=Math.abs(input)),decimals!==!1&&(input=toFixed(input,decimals)),input=input.toString(),input.indexOf(".")!==-1?(inputPieces=input.split("."),inputBase=inputPieces[0],mark&&(inputDecimals=mark+inputPieces[1])):inputBase=input,thousand&&(inputBase=strReverse(inputBase).match(/.{1,3}/g),inputBase=strReverse(inputBase.join(strReverse(thousand)))),inputIsNegative&&negativeBefore&&(output+=negativeBefore),prefix&&(output+=prefix),inputIsNegative&&negative&&(output+=negative),output+=inputBase,output+=inputDecimals,postfix&&(output+=postfix),edit&&(output=edit(output,originalInput)),output)}function formatFrom(decimals,thousand,mark,prefix,postfix,encoder,decoder,negativeBefore,negative,edit,undo,input){var inputIsNegative,output="";return undo&&(input=undo(input)),!(!input||"string"!=typeof input)&&(negativeBefore&&strStartsWith(input,negativeBefore)&&(input=input.replace(negativeBefore,""),inputIsNegative=!0),prefix&&strStartsWith(input,prefix)&&(input=input.replace(prefix,"")),negative&&strStartsWith(input,negative)&&(input=input.replace(negative,""),inputIsNegative=!0),postfix&&strEndsWith(input,postfix)&&(input=input.slice(0,-1*postfix.length)),thousand&&(input=input.split(thousand).join("")),mark&&(input=input.replace(mark,".")),inputIsNegative&&(output+="-"),output+=input,output=output.replace(/[^0-9\.\-.]/g,""),""!==output&&(output=Number(output),decoder&&(output=decoder(output)),!!isValidNumber(output)&&output))}function validate(inputOptions){var i,optionName,optionValue,filteredOptions={};for(i=0;i<FormatOptions.length;i+=1)if(optionName=FormatOptions[i],optionValue=inputOptions[optionName],void 0===optionValue)"negative"!==optionName||filteredOptions.negativeBefore?"mark"===optionName&&"."!==filteredOptions.thousand?filteredOptions[optionName]=".":filteredOptions[optionName]=!1:filteredOptions[optionName]="-";else if("decimals"===optionName){if(!(optionValue>=0&&optionValue<8))throw new Error(optionName);filteredOptions[optionName]=optionValue}else if("encoder"===optionName||"decoder"===optionName||"edit"===optionName||"undo"===optionName){if("function"!=typeof optionValue)throw new Error(optionName);filteredOptions[optionName]=optionValue}else{if("string"!=typeof optionValue)throw new Error(optionName);filteredOptions[optionName]=optionValue}return throwEqualError(filteredOptions,"mark","thousand"),throwEqualError(filteredOptions,"prefix","negative"),throwEqualError(filteredOptions,"prefix","negativeBefore"),filteredOptions}function passAll(options,method,input){var i,args=[];for(i=0;i<FormatOptions.length;i+=1)args.push(options[FormatOptions[i]]);return args.push(input),method.apply("",args)}function wNumb(options){return this instanceof wNumb?void("object"==typeof options&&(options=validate(options),this.to=function(input){return passAll(options,formatTo,input)},this.from=function(input){return passAll(options,formatFrom,input)})):new wNumb(options)}var FormatOptions=["decimals","thousand","mark","prefix","postfix","encoder","decoder","negativeBefore","negative","edit","undo"];return wNumb});