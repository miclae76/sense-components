/*global define*/
/**
 * @todo
 * - Discuss what actually the best practice is:
 *    - in qWidget templateUrl was used, but templateUrl has the drawback of a weak url (thinking of forwards-compatibility)
 * - Loading of wiBootstrap.css should be a central component or at least optimized ... talk to aaz
 */
define(["jquery","angular","underscore","./utils","text!./template/bar.html","text!./template/progress.html","text!./template/progressbar.html","text!./wiBootstrap.css"],function($,angular,_,utils,ngBar,ngProgress,ngProgressbar,cssBootstrap){"use strict";var config={animate:!1,max:100},ProgressController=function($scope,$attrs){var self=this,animate=angular.isDefined($attrs.animate)?$scope.$parent.$eval($attrs.animate):config.animate;this.bars=[],$scope.max=angular.isDefined($attrs.max)?$scope.$parent.$eval($attrs.max):config.max,this.addBar=function(bar,element){animate||element.css({transition:"none"}),this.bars.push(bar),bar.$watch("value",function(value){bar.percent=+(100*value/$scope.max).toFixed(2)}),bar.$on("$destroy",function(){element=null,self.removeBar(bar)})},this.removeBar=function(bar){this.bars.splice(this.bars.indexOf(bar),1)}},components=[{name:"scProgressbar",restrict:"E",replace:!0,transclude:!0,controller:["$scope","$attrs",ProgressController],scope:{value:"=",type:"@"},template:ngProgressbar,compile:function(element,attributes,transclude){return utils.addStyleToHeader("wcBootstrap",cssBootstrap),{pre:function(scope,element,attributes,controller,transcludeFn){var $bootstrapContainer=$(document.createElement("div"));$bootstrapContainer.addClass("wi-bs"),element.wrap($bootstrapContainer)},post:function(scope,element,attributes,progressCtrl,transcludeFn){progressCtrl.addBar(scope,angular.element(element.children()[0]))}}}},{name:"scProgress",restrict:"E",replace:!0,transclude:!0,controller:["$scope","$attrs",ProgressController],require:"scProgress",scope:{},template:ngProgress},{name:"scBar",restrict:"E",replace:!0,transclude:!0,require:"^scProgress",scope:{value:"=",type:"@"},template:ngBar,link:function(scope,element,attrs,progressCtrl){progressCtrl.addBar(scope,element)}}];return components});